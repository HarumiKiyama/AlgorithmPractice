* Description
Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true

Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.

Follow up:

Coud you solve it without converting the integer to a string?
* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  #include <string>

  class Solution {
  public:
    bool isPalindrome(int x) {
      int rev = 0;
      int num = x;
      while (num > 0) {
        rev = rev * 10 + num % 10;
        num = num / 10;
      }
      return x == rev;
    }
  };

  int main(int argc, char *argv[]) {
    Solution solution = Solution();
    std::cout << solution.isPalindrome(121);
    return 0;
  }
#+END_SRC

#+RESULTS:
: 1
