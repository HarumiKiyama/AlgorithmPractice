* Description
Given an array with n integers, your task is to check if it could become non-decreasing by modifying at most 1 element.

We define an array is non-decreasing if array[i] <= array[i + 1] holds for every i (1 <= i < n).

Example 1:

Input: [4,2,3]
Output: True
Explanation: You could modify the first 4 to 1 to get a non-decreasing array.

Example 2:

Input: [4,2,1]
Output: False
Explanation: You can't get a non-decreasing array by modify at most one element.

Note: The n belongs to [1, 10,000].
* Solution
#+begin_src python
class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        first_i = None
        count = 0
        for i in range(len(nums)-1):
            if nums[i] > nums[i+1]:
                if first_i is None:
                    first_i = i
                count += 1
                if count > 1:
                    return False
        if first_i in (0, None ,len(nums) - 2) or nums[first_i-1] <= nums[first_i+1]:
            return True
        return nums[first_i] <= nums[first_i+2]
#+end_src
