* Description
For strings S and T, we say "T divides S" if and only if S = T + ... + T  (T concatenated with itself 1 or more times)

Return the largest string X such that X divides str1 and X divides str2.

Example 1:

Input: str1 = "ABCABC", str2 = "ABC"
Output: "ABC"

Example 2:

Input: str1 = "ABABAB", str2 = "ABAB"
Output: "AB"

Example 3:

Input: str1 = "LEET", str2 = "CODE"
Output: ""

Note:

    1 <= str1.length <= 1000
    1 <= str2.length <= 1000
    str1[i] and str2[i] are English uppercase letters.
* Solution
#+begin_src python
class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        if len(str1) < len(str2):
            str1, str2 = str2, str1
        length1 = len(str1)
        length2 = len(str2)
        for i in range(length2, 0 , -1):
            if length1 % i == 0 and length2 % i == 0:
                t = str2[:i]
                mul1 = length1 // i
                mul2 = length2 // i
                if t * mul1 == str1 and t * mul2 == str2:
                    return t
        return ""
#+end_src
