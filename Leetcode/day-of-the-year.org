* Description
Given a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.

Example 1:

Input: date = "2019-01-09"
Output: 9
Explanation: Given date is the 9th day of the year in 2019.

Example 2:

Input: date = "2019-02-10"
Output: 41

Example 3:

Input: date = "2003-03-01"
Output: 60

Example 4:

Input: date = "2004-03-01"
Output: 61

Constraints:

    date.length == 10
    date[4] == date[7] == '-', and all other date[i]'s are digits
    date represents a calendar date between Jan 1st, 1900 and Dec 31, 2019.
* Solution
#+begin_src python :session year :results output
class Solution:
    def dayOfYear(self, date: str) -> int:
        year, month ,day  = (int(i) for i in date.split('-'))
        month_day = {1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}
        rv = sum(v for k,v in month_day.items() if k < month)
        if month <= 2:
            return rv + day
        return rv + day + int((year%100!=0 and year%4 == 0) or year%400==0)
#+end_src

#+begin_src python :session year :results output
solution = Solution()
assert solution.dayOfYear('2003-03-01') == 60
assert solution.dayOfYear('2004-03-01') == 61
#+end_src

