* Description
We define the Perfect Number is a positive integer that is equal to the sum of all its positive divisors except itself.
Now, given an integer n, write a function that returns true when it is a perfect number and false when it is not.

Example:

Input: 28
Output: True
Explanation: 28 = 1 + 2 + 4 + 7 + 14

Note: The input number n will not exceed 100,000,000. (1e8)
* Solution
#+begin_src java
public class Solution {
    public int pn(int p) {
        return (1 << (p - 1)) * ((1 << p) - 1);
    }
    public boolean checkPerfectNumber(int num) {
        int[] primes=new int[]{2,3,5,7,13,17,19,31};
        for (int prime: primes) {
            if (pn(prime) == num)
                return true;
        }
        return false;
    }
}
#+end_src

#+begin_src python
class Solution:
    def checkPerfectNumber(self, num: int) -> bool:
        def pn(n):
            return (1 << (n-1)) * ((1 << n) - 1)
        primes = (2,3,5,7,13,17,19,31)
        for i in primes:
            if pn(i) == num:
                return True
        return False
#+end_src
