* Description
Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

The same repeated number may be chosen from candidates unlimited number of times.

Note:

    All numbers (including target) will be positive integers.
    The solution set must not contain duplicate combinations.

Example 1:

Input: candidates = [2,3,6,7], target = 7,
A solution set is:
[
  [7],
  [2,2,3]
]

Example 2:

Input: candidates = [2,3,5], target = 8,
A solution set is:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]

* Solution
#+begin_src python
  class Solution:
      def combinationSum(self, candidates: List[int],
                         target: int) -> List[List[int]]:
          rv = []
          candidates.sort()

          def _helper(target, index, path):
              if target < 0:
                  return
              if target == 0:
                  rv.append(path)
                  return
              for i in range(index, len(candidates)):
                  _helper(target - candidates[i], i, path + [candidates[i]])
          _helper(target, 0, [])
          return rv
#+end_src
