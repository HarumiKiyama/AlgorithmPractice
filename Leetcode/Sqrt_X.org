* Description
Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2

Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since
             the decimal part is truncated, 2 is returned.
* Solution
#+begin_src cpp
  class Solution {
  public:
    int mySqrt(int x) {
      float a = x;
      float xhalf = 0.5f * a;
      int i = *(int *)&a;             // get bits for floating VALUE
      i = 0x5f375a86 - (i >> 1);      // gives initial guess y0
      a = *(float *)&i;               // convert bits BACK to float
      a = a * (1.5f - xhalf * a * a); // Newton step, repeating increases accuracy
      return (int)(1/a);
    }
  };
#+end_src
