* Description
Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.
Example 1:
Input:
"bbbab"

Output:
4

One possible longest palindromic subsequence is "bbbb".
Example 2:
Input:
"cbbd"

Output:
2

One possible longest palindromic subsequence is "bb".
* Solution
#+begin_src python
  class Solution:
      def longestPalindromeSubseq(self, s):
          n = len(s)
          l = [[0 for j in range(n)] for i in range(n)]
          for i in range(n):
              l[i][i] = 1
          for cl in range(2, n + 1):
              for i in range(n - cl + 1):
                  j = i + cl - 1
                  if s[i] == s[j] and cl == 2:
                      l[i][j] = 2
                  elif s[i] == s[j]:
                      l[i][j] = l[i + 1][j - 1] + 2
                  else:
                      l[i][j] = max(l[i][j - 1], l[i + 1][j])
          return l[0][n - 1]
#+end_src
