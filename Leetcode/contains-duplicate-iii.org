* Description
Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true

Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true

Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false
* Solution
#+begin_src python
class Solution:
    def containsNearbyAlmostDuplicate(self, nums: List[int], k: int, t: int) -> bool:
        d = {}
        if t < 0:
            return False
        for i,v in enumerate(nums):
            d_k = v // (t+1)

            if d_k in d:
                return True
            d[d_k] = i
            lower = d.get(d_k-1)
            if lower is not None and v - nums[lower] <= t and i - lower <=k:
                return True
            upper = d.get(d_k+1)
            if upper is not None and nums[upper] - v <= t and i - upper <= k:
                return True
            if i - k >= 0:
                l_k = nums[i - k] // (t+1)
                del d[l_k]
        return False
#+end_src
