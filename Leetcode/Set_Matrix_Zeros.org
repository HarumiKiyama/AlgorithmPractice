* Description
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.

Example 1:

Input:
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
Output:
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]

Example 2:

Input:
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
Output:
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]

Follow up:

    A straight forward solution using O(mn) space is probably a bad idea.
    A simple improvement uses O(m + n) space, but still not the best solution.
    Could you devise a constant space solution?
* Solution
#+begin_src python
  class Solution:
      def setZeroes(self, matrix: List[List[int]]) -> None:
          """
          Do not return anything, modify matrix in-place instead.
          """
          m = len(matrix)
          if m == 0:
              return
          n = len(matrix[0])
          for i in range(m):
              for j in range(n):
                  if matrix[i][j] == 0:
                      for a in range(m):
                          if matrix[a][j] is not None and matrix[a][j] != 0:
                              matrix[a][j] = None
                      for a in range(n):
                          if matrix[i][a] is not None and matrix[i][a] != 0:
                              matrix[i][a] = None
          for i in range(m):
              for j in range(n):
                  if matrix[i][j] is None:
                      matrix[i][j] = 0
#+end_src
