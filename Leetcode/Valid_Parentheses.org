* Description
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.

Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true

Example 2:

Input: "()[]{}"
Output: true

Example 3:

Input: "(]"
Output: false

Example 4:

Input: "([)]"
Output: false

Example 5:

Input: "{[]}"
Output: true

* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  #include <stack>
  using namespace std;

  class Solution {
  public:
    bool isValid(string s) { stack<char> temp{};
      for (char t :s){
        if ( t=='[' || t == '{' || t == '(')
          temp.push(t);
        else if (t==']' || t == '}' || t==')'){
          if (temp.empty())
            return false;
          char k = temp.top();
          if (abs(k-t)<=3)
            temp.pop();
          else
            return false;
        }
      }
      return temp.empty();
    }
  };
#+END_SRC
