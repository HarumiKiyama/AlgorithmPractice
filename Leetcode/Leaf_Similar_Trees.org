* Description
Consider all the leaves of a binary tree.  From left to right order, the values of those leaves form a leaf value sequence.

For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

Two binary trees are considered leaf-similar if their leaf value sequence is the same.

Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

Note:

    Both of the given trees will have between 1 and 100 nodes.
* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  #include <queue>
  using namespace std;

  struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
  };

  class Solution {
  private:
    void getLeafSeq(TreeNode *root, vector<int> &rv) {
      if (root->left == nullptr && root->right == nullptr) {
        rv.push_back(root->val);
        return;
      }
      if (root->left != nullptr)
        getLeafSeq(root->left, rv);

      if (root->right != nullptr)
        getLeafSeq(root->right, rv);
    }

  public:
    bool leafSimilar(TreeNode *root1, TreeNode *root2) {
      vector<int> seq1, seq2;
      getLeafSeq(root1, seq1);
      getLeafSeq(root2, seq2);
      return seq1 == seq2;
    }
  };
#+END_SRC
