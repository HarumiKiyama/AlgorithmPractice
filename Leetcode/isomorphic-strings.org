* Description
Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

Example 1:

Input: s = "egg", t = "add"
Output: true

Example 2:

Input: s = "foo", t = "bar"
Output: false

Example 3:

Input: s = "paper", t = "title"
Output: true

Note:
You may assume both s and t have the same length.
* Solution
#+begin_src python
class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        d = {}
        s_s = []
        for i in s:
            if i in d:
                s_s.append(d[i])
            else:
                d[i] = len(d)
                s_s.append(d[i])
        d = {}
        for i in range(len(t)):
            k = -1
            if t[i] in d:
                k = d[t[i]]
            else:
                d[t[i]] = len(d)
            if s_s[i] != d[t[i]]:
                return False
        return True
#+end_src
