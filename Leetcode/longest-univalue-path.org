* Description
Given a binary tree, find the length of the longest path where each node in the path has the same value. This path may or may not pass through the root.

The length of path between two nodes is represented by the number of edges between them.



Example 1:

Input:

              5
             / \
            4   5
           / \   \
          1   1   5

Output: 2



Example 2:

Input:

              1
             / \
            4   5
           / \   \
          4   4   5

Output: 2

Note: The given binary tree has not more than 10000 nodes. The height of the tree is not more than 1000.
* Solution
#+begin_src python
class Solution:
    def longestUnivaluePath(self, root: TreeNode) -> int:
        if root is None:
            return 0
        rv = 0
        route = 0

        def _helper(root, prev=None):
            if root is None:
                return 0
            nonlocal rv
            left = _helper(root.left,root.val)
            right = _helper(root.right, root.val)
            rv = max(rv, left+right)
            if root.val == prev:
                return max(left, right) + 1
            return 0
        _helper(root)
        return rv
#+end_src
