* Description
Given n points in the plane that are all pairwise distinct, a "boomerang" is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).

Find the number of boomerangs. You may assume that n will be at most 500 and coordinates of points are all in the range [-10000, 10000] (inclusive).

Example:

Input:
[[0,0],[1,0],[2,0]]

Output:
2

Explanation:
The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]]
* Solution
#+begin_src python
class Solution:
    def numberOfBoomerangs(self, points: List[List[int]]) -> int:
        rv = 0
        temp = []
        d = {}
        def calculate(t):
            i, j  = map(tuple, t)
            distance = abs(i[0]-j[0]) ** 2 + abs(i[1]-j[1]) ** 2
            n = d.setdefault(distance, {})
            n[i] = n.get(i,0) + 1
            n[j] = n.get(j,0) + 1
        def k_combination(left):
            if len(temp) == 2:
                calculate(temp)
                return
            for i in range(left, len(points)):
                temp.append(points[i])
                k_combination(i+1)
                temp.pop()
        k_combination(0)
        for i in d.values():
            for j in i.values():
                if j > 1:
                    rv += j * (j-1)
        return rv
#+end_src
