* Description
Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.

Example 1:

Input: 2
Output: 1
Explanation: 2 = 1 + 1, 1 × 1 = 1.

Example 2:

Input: 10
Output: 36
Explanation: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36.

Note: You may assume that n is not less than 2 and not larger than 58.
* Solution
#+begin_src rust
impl Solution {
    pub fn integer_break(n: i32) -> i32 {
        let a = (n / 3) as u32;
        let b = (n % 3) as u32;

        if n / 4 == 0 {
            return n-1;
        }

        if b == 0{
            i32::pow(3,a as u32)
        }else if b == 1{
            i32::pow(3,(a-1) as u32) * 4
        }else{
            i32::pow(3,a as u32) * 2
        }
    }
}
#+end_src
