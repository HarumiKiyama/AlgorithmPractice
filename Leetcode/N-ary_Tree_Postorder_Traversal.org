* Description
Given an n-ary tree, return the postorder traversal of its nodes' values.
For example, given a 3-ary tree:
Return its postorder traversal as: [5,6,3,2,4,1].
Note: Recursive solution is trivial, could you do it iteratively?
* Solution
#+BEGIN_SRC cpp
  #include <algorithm>
  #include <deque>
  #include <queue>
  #include <vector>
  using namespace std;
  class Node {
  public:
    int val;
    vector<Node *> children;

    Node() {}

    Node(int _val, vector<Node *> _children) {
      val = _val;
      children = _children;
    }
  };

  class Solution {
  public:
    vector<int> postorder(Node *root) {
      if (root == nullptr)
        return {};
      vector<int> rv;
      for (auto i : root->children) {
        vector<int> t = postorder(i);
        rv.insert(rv.end(), t.begin(), t.end());
      }
      rv.push_back(root->val);
      return rv;
    }
  };
#+END_SRC
