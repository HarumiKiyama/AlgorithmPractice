* Description
Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.

Example 1:

Input: A = "ab", B = "ba"
Output: true

Example 2:

Input: A = "ab", B = "ab"
Output: false

Example 3:

Input: A = "aa", B = "aa"
Output: true

Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true

Example 5:

Input: A = "", B = "aa"
Output: false

Note:

    0 <= A.length <= 20000
    0 <= B.length <= 20000
    A and B consist only of lowercase letters.
* Solution
#+begin_src python
class Solution:
    def buddyStrings(self, A: str, B: str) -> bool:
        if len(A) != len(B):
            return False
        rv = []
        for i,j in zip(A,B):
            if i != j:
                if len(rv) >= 2:
                    return False
                rv.append((i, j))
        if len(rv) == 1:
            return False
        if len(rv) == 0:
            return len(set(A)) != len(A)
        if rv[0][0] == rv[1][1] and rv[0][1] == rv[1][0]:
            return True
        return False
#+end_src
