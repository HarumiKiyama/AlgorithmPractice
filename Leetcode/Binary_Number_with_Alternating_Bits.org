* Description
Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.

Example 1:

Input: 5
Output: True
Explanation:
The binary representation of 5 is: 101

Example 2:

Input: 7
Output: False
Explanation:
The binary representation of 7 is: 111.

Example 3:

Input: 11
Output: False
Explanation:
The binary representation of 11 is: 1011.

Example 4:

Input: 10
Output: True
Explanation:
The binary representation of 10 is: 1010.
* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  using namespace std;

  class Solution {
  public:
    bool hasAlternatingBits(int n) {
      if (n == 1)
        return true;
      int last_val = n % 2;
      int temp{0};
      n /= 2;
      while (n > 0) {
        temp = n % 2;
        if (temp == last_val)
          return false;
        last_val = temp;
        n /= 2;
      }
      return true;
    }
  };
#+END_SRC
