* Description
Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
* Solution
#+begin_src python :results output
  class Solution:
      def lengthOfLongestSubstring(self, s: str) -> int:
          n = len(s)
          if n == 0:
              return 0
          t = {}
          j = 0
          rv = 0
          for i in range(n):
              if s[i] in t:
                  j = max(t[s[i]], j)
              rv = max(rv, i - j + 1)
              t[s[i]] = i + 1
          return rv



#+end_src

#+RESULTS:
: True
: True
