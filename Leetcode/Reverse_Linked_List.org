* Description
Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL

Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?
* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  #include <stack>
  using namespace std;

  struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
  };
  class Solution {
  public:
    ListNode *reverseList(ListNode *head) {
      if (head == nullptr)
        return head;
      ListNode *t = head->next;
      ListNode *f = head;
      while (t != nullptr){
        ListNode *q = t->next;
        t->next = f;
        f = t;
        t = q;
      }
      return f;
    }
  };
#+END_SRC
