You are given a string of numbers between 0-9. Find the average of these numbers and return it as a floored whole number (ie: no decimal places) written out as a string. Eg:

"zero nine five two" -> "four"

If the string is empty or includes a number greater than 9, return "n/a"

#+BEGIN_SRC haskell
  import Data.List (elemIndex)
  averageString :: String -> String
  averageString "" = "n/a"
  averageString xs = maybe "n/a" (intToString . avg) . traverse stringToInt . words $ xs where
    numbers = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"]
    stringToInt = (`elemIndex` numbers)
    intToString = (numbers !!)
    avg = div <$> sum <*> length
#+END_SRC
