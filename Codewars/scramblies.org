Write =function scramble(str1,str2)= that returns =true= if a portion of =str1= characters can be rearranged to match =str2=, otherwise returns =false=.

For example:
=str1= is ='rkqodlw'= and =str2= is ='world'= the output should return =true=.
=str1= is ='cedewaraaossoqqyt'= and =str2= is ='codewars'= should return =true=.
=str1= is ='katas'= and =str2= is ='steak'= should return =false=.

Only lower case letters will be used (a-z). No punctuation or digits will be included.
Performance needs to be considered

#+BEGIN_SRC python :results output
  import unittest


  def scramble(s1, s2):
      s1_dict = {}
      for i in s1:
          s1_dict[i] = s1_dict.get(i, 0) + 1
      for i in s2:
          if i not in s1_dict or s1_dict[i] <= 0:
              return False
          s1_dict[i] -= 1
      return True


  class TestCase(unittest.TestCase):
      def test_cases(self):
          self.assertEquals(scramble('rkqodlw', 'world'), True)
          self.assertEquals(scramble('cedewaraaossoqqyt', 'codewars'), True)
          self.assertEquals(scramble('katas', 'steak'), False)
          self.assertEquals(scramble('scriptjava', 'javascript'), True)
          self.assertEquals(scramble('scriptingjava', 'javascript'), True)


  if __name__ == '__main__':
      unittest.main()
#+END_SRC
