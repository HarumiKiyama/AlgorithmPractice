* Description
正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。
现给定A、DA、B、DB，请编写程序计算PA + PB。
输入描述:
输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 < A, B < 1010。
输出描述:
在一行中输出PA + PB的值。
输入例子:
3862767 6 13530293 3
输出例子:
399
* Solution
#+BEGIN_SRC cpp
  #include <iostream>

  using namespace std;

  int main(int args, char *argv[]) {
    string A, B;
    char DA, DB;
    cin >> A;
    cin >> DA;
    cin >> B;
    cin >> DB;
    int long PA = 0, PB = 0;
    for (size_t i = 0; i < A.size(); i++) {
      if (A[i] == DA) {
        PA *= 10;
        PA += DA - '0';
      }
    }
    for (size_t i = 0; i < B.size(); i++) {
      if (B[i] == DB) {
        PB *= 10;
        PB += DB - '0';
      }
    }
    cout << PA+PB;
    return 0;
  }
#+END_SRC
