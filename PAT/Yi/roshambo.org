* Description
大家应该都会玩“锤子剪刀布”的游戏：

现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。


输入描述:

输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代

表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。



输出描述:

输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯

一，则输出按字母序最小的解。
输入例子:

10

C J

J B

C B

B B

B C

C C

C B

J B

B C

J J


输出例子:

5 3 2

2 3 5

B B
* Solution
#+BEGIN_SRC cpp
  #include <iostream>
  using namespace std;

  int main(int argc, char *argv[]) {
    int times;
    cin >> times;
    char A, B;
    int EQ = 0, AC = 0, AJ = 0, AB = 0, BC = 0, BJ = 0, BB = 0;
    for (; times > 0; times--) {
      cin >> A;
      cin >> B;
      if (A == B) {
        EQ++;
        continue;
      }
      switch (A) {
      case 'C': {
        if (B == 'J')
          AC++;
        else
          BB++;
        break;
      }
      case 'B': {
        if (B == 'C')
          AB++;
        else
          BJ++;
        break;
      }
      case 'J': {
        if (B == 'B')
          AJ++;
        else
          BC++;
        break;
      }
      }
    }
    cout << AC + AJ + AB << " " << EQ << " " << BC + BJ + BB << endl;
    cout << BC + BJ + BB << " " << EQ << " " << AC + AJ + AB << endl;
    int AMAX = max(max(AC, AJ), AB);
    int BMAX = max(max(BC, BJ), BB);
    if (AB==AMAX){
      cout << 'B';
    }else if(AC==AMAX){
      cout << 'C';
    }else
      cout << 'J';
    cout << " ";
    if (BB==BMAX){
      cout << 'B';
    }else if(BC==BMAX){
      cout << 'C';
    }else
      cout << 'J';
    return 0;
  }
#+END_SRC
