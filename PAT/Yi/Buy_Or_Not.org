* Description
小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一

下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。



为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如，YrR8RrY是小红想做的珠串；那么ppRYYGrrYBR2258可以买，因为包含了

全部她想要的珠子，还多了8颗不需要的珠子；ppRYYGrrYB225不能买，因为没有黑色珠子，并且少了一颗红色的珠子。


输入描述:

每个输入包含1个测试用例。每个测试用例分别在2行中先后给出摊主的珠串和小红想做的珠串，两串都不超过1000个珠子。



输出描述:

如果可以买，则在一行中输出“Yes”以及有多少多余的珠子；如果不可以买，则在一行中输出“No”以及缺了多少珠子。其间以1个空格分隔。


输入例子:

ppRYYGrrYBR2258

YrR8RrY


输出例子:

Yes 8
* Solution
#+BEGIN_SRC cpp :cmdline < input.txt
  #include <iostream>
  using namespace std;

  int main(int argc, char *argv[]) {
    int bracelet_bead[200] = {0}, want_bead[200] = {0};
    bool accept = true;
    string bracelet, want;
    cin >> bracelet >> want;
    for (size_t i : want)
      want_bead[i] += 1;
    for (size_t i : bracelet)
      bracelet_bead[i] += 1;
    int res = 0;
    for (size_t i = 0; i < 200; i++) {
      if (want_bead[i] > bracelet_bead[i]) {
        accept = false;
      }
    }
    if (accept) {
      for (size_t i = 0; i < 200; i++)
        res += bracelet_bead[i] - want_bead[i];
      cout << "Yes"
           << " " << res;
    } else {
      for (size_t i = 0; i < 200; i++)
        if (bracelet_bead[i] < want_bead[i])
          res += want_bead[i] - bracelet_bead[i];

      cout << "No" << " " << res;
    }

    return 0;
  }
#+END_SRC

#+RESULTS:
: Yes 8
